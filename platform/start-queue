#!/usr/bin/env bash

#source /platform/bash-exec

ENV_FILE="/etc/container_environment.sh"
ENV_DIR="/etc/container_environment/"
source $ENV_FILE
WORK_DIR=${LARAVEL_QUEUE_WORK_DIR:-"/app"}
ARTISAN="/usr/local/bin/php artisan"
DEFAULT_COMMAND="$ARTISAN queue:work"
QUEUE_WORK_COMMAND=${LARAVEL_QUEUE_WORK_COMMAND:-$DEFAULT_COMMAND}

set +e
for oneshot in `ls /platform/start-container.d/`
do
    echo "executing one shot start-up command /platform/start-container.d/$oneshot"
    /platform/start-container.d/$oneshot
done

cd $WORK_DIR
if [ -z "artisan" ]; then
    echo "No artisan found. stopping ..."
    exit 1
fi


function shutdown () {
    # Disabling the traps to avoid a cascading
    trap - SIGINT SIGILL SIGABRT SIGFPE SIGSEGV SIGTERM SIGBUS SIGCHLD SIGKILL ERR
    echo "waiting for all services to exit ..."
    DONE=0
    SLEEP_COUNT=0
    SLEEP_MAX=60
    while [ $DONE -ne 1 ] && [ $SLEEP_COUNT -le $SLEEP_MAX ];
    do
        echo "sending TERM to all php processes"
        killall -TERM php
        SLEEP_COUNT=$((SLEEP_COUNT + 1))
        sleep 1
        if ! ps -C php > /dev/null; then
            DONE=1
            continue
        fi

        if [ $SLEEP_COUNT -ge $SLEEP_MAX ]
        then
            echo "Sleep count too high, exiting."
            exit 1
        fi
        echo "Waiting for more php processes to exit ..."
    done

exit 0
}

trap shutdown SIGTERM SIGQUIT SIGINT;
chpst -u www-data:www-data -e $ENV_DIR $LARAVEL_QUEUE_WORK_COMMAND &
wait
